<project name="jenkins-config">

    <!-- System pre-installed tools -->
    <property name="composer" value="composer"/>
    <property name="npm" value="npm"/>
    <property name="php" value="php"/>
    <property environment="env"/>

    <!-- Project folders -->
    <property name="rootdir" value="${basedir}"/>
    <property name="codebase" value="${rootdir}/www/wp-content/themes/seductive"/>
    <property name="builddir" value="${rootdir}/build"/>
    <property name="buildoutputdir" value="${builddir}/logs"/>
    <property name="failsdir" value="${builddir}/fails"/>
    <property name="nodedir" value="${rootdir}/node_modules/.bin"/>
    <property name="csslint" value="${nodedir}/csslint"/>
    <property name="jshint" value="${nodedir}/jshint"/>
    <property name="lesshint" value="${nodedir}/lesshint"/>

    <!-- Behat configuration -->
    <!--<property name="behat" value="${basedir}/vendor/bin/behat"/>-->
    <!--<property name="configuration" value="behat.chrome.yml"/>-->
    <!--<property name="profile" value="jenkins"/>-->

    <!-- Including building tools targets -->
    <include file="build.behat.xml" as="behat"/>
    <include file="build.phpmd.xml" as="phpmd"/>
    <include file="build.phpcpd.xml" as="phpcpd"/>
    <include file="build.pdepend.xml" as="pdepend"/>
    <include file="build.phpcs.xml" as="phpcs"/>
    <include file="build.phploc.xml" as="phploc"/>
    <include file="build.phplint.xml" as="phplint"/>
    <include file="build.phpmetrics.xml" as="phpmetrics"/>
    <include file="build.phpdox.xml" as="phpdox"/>
    <include file="build.phpunit.xml" as="phpunit"/>
    <include file="build.deployer.xml" as="deployer"/>
    <include file="build.jshint.xml" as="jshint"/>
    <include file="build.lesshint.xml" as="lesshint"/>
    <include file="build.csslint.xml" as="csslint"/>
    <include file="build.mysql.xml" as="mysql"/>

    <target name="full-build"
            depends="clean,mysql.import-dump,prepare-wordpress,static-analysis,phpunit.execute,behat.execute,deployer.execute"
            description="Performs static analysis, runs the tests, and generates project documentation"/>

    <target name="static-analysis"
            depends="
            phplint.execute,
            phploc.execute,
            pdepend.execute,
            phpmd.execute,
            phpcs.execute,
            phpcpd.execute,
            jshint.execute,
            lesshint.execute,
            csslint.execute"
            description="Performs static analysis"
    />

    <target name="clean" unless="clean.done" description="Cleanup build artifacts">
        <delete dir="${buildoutputdir}"/>
        <mkdir dir="${buildoutputdir}"/>
        <echo message="Current branch: ${env.GIT_BRANCH}"/>
        <property name="clean.done" value="true"/>
    </target>

    <target name="prepare-wordpress" description="Prepare Symfony">
        <exec executable="cp">
            <arg value="-f"></arg>
            <arg value="${rootdir}/www/wp-config.test.php"/>
            <arg value="${rootdir}/www/wp-config.php"></arg>
        </exec>
        <exec executable="mkdir">
            <arg value="-p"></arg>
            <arg value="${failsdir}"></arg>
        </exec>
        <exec executable="mkdir">
            <arg value="-p"></arg>
            <arg value="${rootdir}/www/wp-content/uploads"></arg>
        </exec>
        <exec executable="chmod">
            <arg value="-R"></arg>
            <arg value="0777"></arg>
            <arg value="${rootdir}/www/wp-content/uploads"></arg>
        </exec>
        <property name="prepare-wordpress.done" value="true"/>
    </target>

    <target name="if.dev.branch">
        <condition property="is.dev.branch">
            <matches pattern="origin/dev" string="${env.GIT_BRANCH}"/>
        </condition>
    </target>

    <target name="if.test.branch">
        <condition property="is.test.branch">
            <matches pattern="origin/test" string="${env.GIT_BRANCH}"/>
        </condition>
    </target>
</project>